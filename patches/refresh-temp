Bottom: c864067a3cecdf526299c315e4fdd105ebe5ff2d
Top:    884123cd4983bada9c4b97750ae843615e9baadf
Author: Alexandre Oliva <aoliva@redhat.com>
Date:   2015-10-29 01:02:10 -0200

Refresh of special-memfuncs-ctor-and-dtor.patch

---

diff --git a/libcc1/libcp1plugin.cc b/libcc1/libcp1plugin.cc
index d53da61..665cf31 100644
--- a/libcc1/libcp1plugin.cc
+++ b/libcc1/libcp1plugin.cc
@@ -481,11 +481,10 @@ plugin_new_decl (cc1_plugin::connection *self,
 
   source_location loc = ctx->get_source_location (filename, line_number);
   bool class_member_p = at_class_scope_p ();
+  bool ctor = false, dtor = false;
 
   if (code == FUNCTION_DECL)
     {
-      bool ctor = false, dtor = false;
-
       if (sym_flags & GCC_CP_FLAG_SPECIAL_FUNCTION)
 	{
 #define CHARS2(f,s) (((unsigned char)f << CHAR_BIT) | (unsigned char)s)
@@ -679,6 +678,16 @@ plugin_new_decl (cc1_plugin::connection *self,
 	    gcc_unreachable ();
 	  }
 	}
+      if (ctor || dtor)
+	{
+	  tree lookup_id;
+	  if (ctor)
+	    lookup_id = constructor_name_full (current_class_type);
+	  else
+	    lookup_id = built_nt (BIT_NOT_EXPR, current_class_type);
+	  // FIXME: look up a decl with the given signature
+	  goto found_decl;
+	}
       decl = build_lang_decl_loc (loc, code, identifier, sym_type);
       SET_DECL_LANGUAGE (decl, lang_cplusplus); // FIXME: current_lang_name is lang_name_c while compiling an extern "C" function, and we haven't switched to a global context at this point, and this breaks function overloading.
       if (class_member_p)
@@ -714,7 +723,6 @@ plugin_new_decl (cc1_plugin::connection *self,
 	    DECL_CONSTRUCTOR_P (decl) = 1;
 	  if (dtor)
 	    DECL_DESTRUCTOR_P (decl) = 1;
-	  clone_function_decl (decl, /*update_method_vec_p=*/0);
 	}
     }
   else if (class_member_p)
@@ -744,6 +752,7 @@ plugin_new_decl (cc1_plugin::connection *self,
   else if (at_namespace_scope_p ())
     DECL_CONTEXT (decl) = FROB_CONTEXT (current_decl_namespace ());
 
+ found_decl:
   if (sym_kind != GCC_CP_SYMBOL_TYPEDEF)
     {
       decl_addr_value value;
@@ -775,7 +784,11 @@ plugin_new_decl (cc1_plugin::connection *self,
     }
 
   if (class_member_p)
-    finish_member_declaration (decl);
+    {
+      finish_member_declaration (decl);
+      if (ctor || dtor)
+	clone_function_decl (decl, /*update_method_vec_p=*/0);
+    }
   else
     decl = safe_pushdecl_maybe_friend (decl, false);
