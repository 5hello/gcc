Bottom: c2d275fa0d0f10e7a69d1537e55a195d119dd6db
Top:    785408457dfd5a19223fd314565b1f156de6db8b
Author: Alexandre Oliva <aoliva@redhat.com>
Date:   2015-12-29 00:45:54 -0200

Refresh of template-support.patch

---

diff --git a/include/gcc-cp-fe.def b/include/gcc-cp-fe.def
index 69c4c83..dc118e5 100644
--- a/include/gcc-cp-fe.def
+++ b/include/gcc-cp-fe.def
@@ -565,7 +565,7 @@ GCC_METHOD2 (gcc_type, build_vector_type,
    location.  If this is not known, FILENAME can be NULL and
    LINE_NUMBER can be 0.  */
 
-GCC_METHOD5 (int /* bool */, build_constant_deprecated,
+GCC_METHOD5 (int /* bool */, build_constant,
 	     gcc_type,		  /* Argument TYPE.  */
 	     const char *,	  /* Argument NAME.  */
 	     unsigned long,	  /* Argument VALUE.  */
diff --git a/include/gcc-cp-interface.h b/include/gcc-cp-interface.h
index 37993b5..95999de 100644
--- a/include/gcc-cp-interface.h
+++ b/include/gcc-cp-interface.h
@@ -85,6 +85,8 @@ struct gcc_vbase_array
 
 typedef unsigned long long gcc_expr;
 
+/* FIXME: do we need to support argument packs?  */
+
 typedef enum
 { GCC_CP_TPARG_VALUE, GCC_CP_TPARG_CLASS, GCC_CP_TPARG_TEMPL }
 gcc_cp_template_arg_kind;
@@ -92,7 +94,7 @@ gcc_cp_template_arg_kind;
 typedef union
 { gcc_expr value; gcc_type type; gcc_decl templ; }
 gcc_cp_template_arg;
-  
+
 /* An array of template arguments.  */
 
 struct gcc_cp_template_args
diff --git a/libcc1/libcp1plugin.cc b/libcc1/libcp1plugin.cc
index 06e3ddb..4bbe63d 100644
--- a/libcc1/libcp1plugin.cc
+++ b/libcc1/libcp1plugin.cc
@@ -1481,10 +1481,9 @@ plugin_build_vector_type (cc1_plugin::connection *self,
 }
 
 int
-plugin_build_constant_deprecated (cc1_plugin::connection *self,
-				  gcc_type type_in,
-				  const char *name, unsigned long value,
-				  const char *filename, unsigned int line_number)
+plugin_build_constant (cc1_plugin::connection *self, gcc_type type_in,
+		       const char *name, unsigned long value,
+		       const char *filename, unsigned int line_number)
 {
   plugin_context *ctx = static_cast<plugin_context *> (self);
   tree cst, decl;
