Bottom: f32defb52679471b2cc3f73667c0a0e2abc3bb74
Top:    dc7515afd3bafeb8189262f26559c562c443a6ae
Author: Alexandre Oliva <aoliva@redhat.com>
Date:   2016-05-20 23:46:29 -0300

Refresh of call-exprs.patch

---

diff --git a/libcc1/libcp1plugin.cc b/libcc1/libcp1plugin.cc
index 04062d1..1486948 100644
--- a/libcc1/libcp1plugin.cc
+++ b/libcc1/libcp1plugin.cc
@@ -2140,7 +2140,10 @@ plugin_unary_value_expr (cc1_plugin::connection *self,
     case CHARS2 ('n', 't'): // operator !
       opcode = TRUTH_NOT_EXPR;
       break;
-      /* FIXME: __real__, __imag__.  */
+      /* FIXME: __real__, __imag__, (global-scope) delete, delete[],
+	 preinc, predec, noexcept,
+	 non-type (and type) typeid, sizeof, alignof,
+	 sizeof...(pack), pack... (expansion), throw (rethrow?).  */
     case CHARS2 ('p', 'p'): // operator ++
     case CHARS2 ('m', 'm'): // operator --
     default:
@@ -2269,7 +2272,8 @@ plugin_unary_type_expr (cc1_plugin::connection *self,
   tree_code opcode = ERROR_MARK;
   switch (CHARS2 (unary_op[0], unary_op[1]))
     {
-      /* FIXME: implement sizeof, alignof, ...  */
+      /* FIXME: implement sizeof, alignof, new, new[] (but how about
+	 placement new args, ctor arguments, global scope?), ...  */
     default:
       gcc_unreachable ();
     }
@@ -2293,7 +2297,8 @@ plugin_type_value_expr (cc1_plugin::connection *self,
 #endif
   switch (CHARS2 (binary_op[0], binary_op[1]))
     {
-      /* FIXME: implement type casts, ...  */
+      /* FIXME: implement type casts; conversions taking argument
+	 lists or braced initializers?  */
     default:
       gcc_unreachable ();
     }
