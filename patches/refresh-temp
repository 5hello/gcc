Bottom: c6b2c7a762601c2d4f94258bee06327fbe2c5772
Top:    6f5cf1816c5e57921d13b1047cf5423269825419
Author: Alexandre Oliva <aoliva@redhat.com>
Date:   2016-03-02 15:38:46 -0300

Refresh of char-type.patch

---

diff --git a/include/gcc-c-fe.def b/include/gcc-c-fe.def
index 25f83f9..4b32ff4 100644
--- a/include/gcc-c-fe.def
+++ b/include/gcc-c-fe.def
@@ -1,6 +1,6 @@
 /* Interface between GCC C FE and GDB  -*- c -*-
 
-   Copyright (C) 2014-2015 Free Software Foundation, Inc.
+   Copyright (C) 2014-2016 Free Software Foundation, Inc.
 
    This file is part of GCC.
 
@@ -125,13 +125,17 @@ GCC_METHOD3 (gcc_type, build_function_type,
 	     const struct gcc_type_array *, /* Argument ARGUMENT_TYPES.  */
 	     int /* bool */)               /* Argument IS_VARARGS.  */
 
-/* Return an integer type with the given properties.
-   Pass zero in IS_UNSIGNED and SIZE_IN_BYTES to get type 'char'.  */
+/* Return an integer type with the given properties.  */
 
 GCC_METHOD2 (gcc_type, int_type,
 	     int /* bool */,               /* Argument IS_UNSIGNED.  */
 	     unsigned long)                /* Argument SIZE_IN_BYTES.  */
 
+/* Return the 'char' type, a distinct type from both 'signed char' and
+   'unsigned char' returned by int_type.  */
+
+GCC_METHOD2 (gcc_type, char_type)
+
 /* Return a floating point type with the given properties.  */
 
 GCC_METHOD1 (gcc_type, float_type,
diff --git a/include/gcc-c-interface.h b/include/gcc-c-interface.h
index bb1e4e6..bee7f4e 100644
--- a/include/gcc-c-interface.h
+++ b/include/gcc-c-interface.h
@@ -1,6 +1,6 @@
 /* Interface between GCC C FE and GDB
 
-   Copyright (C) 2014-2015 Free Software Foundation, Inc.
+   Copyright (C) 2014-2016 Free Software Foundation, Inc.
 
    This file is part of GCC.
 
@@ -41,7 +41,7 @@ struct gcc_c_context;
 
 enum gcc_c_api_version
 {
-  GCC_C_FE_VERSION_0 = 0
+  GCC_C_FE_VERSION_0 = 1
 };
 
 /* Qualifiers.  */
diff --git a/include/gcc-cp-fe.def b/include/gcc-cp-fe.def
index f0eb8b1..74af292 100644
--- a/include/gcc-cp-fe.def
+++ b/include/gcc-cp-fe.def
@@ -1,6 +1,6 @@
 /* Interface between GCC C++ FE and GDB  -*- c -*-
 
-   Copyright (C) 2014-2015 Free Software Foundation, Inc.
+   Copyright (C) 2014-2016 Free Software Foundation, Inc.
 
    This file is part of GCC.
 
@@ -504,13 +504,17 @@ GCC_METHOD4 (gcc_type, build_method_type,
 
 // FIXME: add default expressions for function arguments?
 
-/* Return an integer type with the given properties.
-   Pass zero in IS_UNSIGNED and SIZE_IN_BYTES to get type 'char'.  */
+/* Return an integer type with the given properties.  */
 
 GCC_METHOD2 (gcc_type, int_type,
 	     int /* bool */,		   /* Argument IS_UNSIGNED.  */
 	     unsigned long)                /* Argument SIZE_IN_BYTES.  */
 
+/* Return the 'char' type, a distinct type from both 'signed char' and
+   'unsigned char' returned by int_type.  */
+
+GCC_METHOD2 (gcc_type, char_type)
+
 /* Return a floating point type with the given properties.  */
 
 GCC_METHOD1 (gcc_type, float_type,
diff --git a/include/gcc-cp-interface.h b/include/gcc-cp-interface.h
index 371cfcf..b5d3095 100644
--- a/include/gcc-cp-interface.h
+++ b/include/gcc-cp-interface.h
@@ -1,6 +1,6 @@
 /* Interface between GCC C++ FE and GDB
 
-   Copyright (C) 2014-2015 Free Software Foundation, Inc.
+   Copyright (C) 2014-2016 Free Software Foundation, Inc.
 
    This file is part of GCC.
 
@@ -41,7 +41,7 @@ struct gcc_cp_context;
 
 enum gcc_cp_api_version
 {
-  GCC_CP_FE_VERSION_0 = 0xffffffff-4
+  GCC_CP_FE_VERSION_0 = 0xffffffff-5
 };
 
 /* Qualifiers.  */
diff --git a/libcc1/libcc1plugin.cc b/libcc1/libcc1plugin.cc
index abcf63a..b8dc70f 100644
--- a/libcc1/libcc1plugin.cc
+++ b/libcc1/libcc1plugin.cc
@@ -1,7 +1,9 @@
 /* Library interface to C front end
-   Copyright (C) 2014 Free Software Foundation, Inc.
+   Copyright (C) 2014-2016 Free Software Foundation, Inc.
 
-   This file is part of GCC.
+   This file is part of GCC.  As it interacts with GDB through libcc1,
+   they all become single combined work, and the GNU GPL applies to it
+   as a whole.
 
    GCC is free software; you can redistribute it and/or modify it under
    the terms of the GNU General Public License as published by the Free
@@ -698,13 +700,8 @@ gcc_type
 plugin_int_type (cc1_plugin::connection *self,
 		 int is_unsigned, unsigned long size_in_bytes)
 {
-  tree result;
-
-  if (!size_in_bytes && !is_unsigned)
-    result = char_type_node;
-  else
-    result = c_common_type_for_size (BITS_PER_UNIT * size_in_bytes,
-				     is_unsigned);
+  tree result = c_common_type_for_size (BITS_PER_UNIT * size_in_bytes,
+					is_unsigned);
   if (result == NULL_TREE)
     result = error_mark_node;
   else
@@ -716,6 +713,12 @@ plugin_int_type (cc1_plugin::connection *self,
 }
 
 gcc_type
+plugin_char_type (cc1_plugin::connection *self)
+{
+  return convert_out (char_type_node);
+}
+
+gcc_type
 plugin_float_type (cc1_plugin::connection *,
 		   unsigned long size_in_bytes)
 {
diff --git a/libcc1/libcp1plugin.cc b/libcc1/libcp1plugin.cc
index 4d9507d..02322a5 100644
--- a/libcc1/libcp1plugin.cc
+++ b/libcc1/libcp1plugin.cc
@@ -2,7 +2,8 @@
    Copyright (C) 2014-2016 Free Software Foundation, Inc.
 
    This file is part of GCC.  As it interacts with GDB through libcc1,
-   they all become a single program as regards the GNU GPL's requirements.
+   they all become single combined work, and the GNU GPL applies to it
+   as a whole.
 
    GCC is free software; you can redistribute it and/or modify it under
    the terms of the GNU General Public License as published by the Free
@@ -1485,13 +1486,8 @@ gcc_type
 plugin_int_type (cc1_plugin::connection *self,
 		 int is_unsigned, unsigned long size_in_bytes)
 {
-  tree result;
-
-  if (!size_in_bytes && !is_unsigned)
-    result = char_type_node;
-  else
-    result = c_common_type_for_size (BITS_PER_UNIT * size_in_bytes,
-				     is_unsigned);
+  tree result = c_common_type_for_size (BITS_PER_UNIT * size_in_bytes,
+					is_unsigned);
   if (result == NULL_TREE)
     result = error_mark_node;
   else
@@ -1503,6 +1499,12 @@ plugin_int_type (cc1_plugin::connection *self,
 }
 
 gcc_type
+plugin_char_type (cc1_plugin::connection *self)
+{
+  return convert_out (char_type_node);
+}
+
+gcc_type
 plugin_float_type (cc1_plugin::connection *,
 		   unsigned long size_in_bytes)
 {
