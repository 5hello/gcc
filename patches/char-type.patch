Bottom: 478f145350af7d32382520c71f8340d1513f0370
Top:    c6b2c7a762601c2d4f94258bee06327fbe2c5772
Author: Alexandre Oliva <aoliva@redhat.com>
Date:   2016-03-02 01:14:51 -0300

introduce callback to get type char

---

diff --git a/include/gcc-c-fe.def b/include/gcc-c-fe.def
index 25ace1c..25f83f9 100644
--- a/include/gcc-c-fe.def
+++ b/include/gcc-c-fe.def
@@ -125,7 +125,8 @@ GCC_METHOD3 (gcc_type, build_function_type,
 	     const struct gcc_type_array *, /* Argument ARGUMENT_TYPES.  */
 	     int /* bool */)               /* Argument IS_VARARGS.  */
 
-/* Return an integer type with the given properties.  */
+/* Return an integer type with the given properties.
+   Pass zero in IS_UNSIGNED and SIZE_IN_BYTES to get type 'char'.  */
 
 GCC_METHOD2 (gcc_type, int_type,
 	     int /* bool */,               /* Argument IS_UNSIGNED.  */
diff --git a/include/gcc-cp-fe.def b/include/gcc-cp-fe.def
index 751f12b..f0eb8b1 100644
--- a/include/gcc-cp-fe.def
+++ b/include/gcc-cp-fe.def
@@ -504,7 +504,8 @@ GCC_METHOD4 (gcc_type, build_method_type,
 
 // FIXME: add default expressions for function arguments?
 
-/* Return an integer type with the given properties.  */
+/* Return an integer type with the given properties.
+   Pass zero in IS_UNSIGNED and SIZE_IN_BYTES to get type 'char'.  */
 
 GCC_METHOD2 (gcc_type, int_type,
 	     int /* bool */,		   /* Argument IS_UNSIGNED.  */
diff --git a/libcc1/libcc1plugin.cc b/libcc1/libcc1plugin.cc
index 6f7b527..abcf63a 100644
--- a/libcc1/libcc1plugin.cc
+++ b/libcc1/libcc1plugin.cc
@@ -698,8 +698,13 @@ gcc_type
 plugin_int_type (cc1_plugin::connection *self,
 		 int is_unsigned, unsigned long size_in_bytes)
 {
-  tree result = c_common_type_for_size (BITS_PER_UNIT * size_in_bytes,
-					is_unsigned);
+  tree result;
+
+  if (!size_in_bytes && !is_unsigned)
+    result = char_type_node;
+  else
+    result = c_common_type_for_size (BITS_PER_UNIT * size_in_bytes,
+				     is_unsigned);
   if (result == NULL_TREE)
     result = error_mark_node;
   else
diff --git a/libcc1/libcp1plugin.cc b/libcc1/libcp1plugin.cc
index d65647d..4d9507d 100644
--- a/libcc1/libcp1plugin.cc
+++ b/libcc1/libcp1plugin.cc
@@ -1485,8 +1485,13 @@ gcc_type
 plugin_int_type (cc1_plugin::connection *self,
 		 int is_unsigned, unsigned long size_in_bytes)
 {
-  tree result = c_common_type_for_size (BITS_PER_UNIT * size_in_bytes,
-					is_unsigned);
+  tree result;
+
+  if (!size_in_bytes && !is_unsigned)
+    result = char_type_node;
+  else
+    result = c_common_type_for_size (BITS_PER_UNIT * size_in_bytes,
+				     is_unsigned);
   if (result == NULL_TREE)
     result = error_mark_node;
   else
